//
//  NSDictionary+CaseInsensitiveKeys.m
//
//  Category of NSDictionary to provide lookups on string-valued keys in a case-insensitive manner.
//  Adapted from Deepak's StackOverflow post answer: http://stackoverflow.com/questions/6135000/case-insensitive-search-in-nsmutabledictionary 
//
//  Created by Jeff Hay on 3/29/12.
//  Copyright (c) 2012 Portable Knowledge, LLC. All rights reserved.
//
// Portable Knowledge Open Source Component License - Version 1.0 - April 13th, 2012
// 
// Permission is hereby granted, free of charge, to any person or organization`
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.  IN NO CASE DOES THE USE OF THIS SOFTWARE EXPRESS
// OR IMPLY ANY PARTNERSHIP OR COOPERATION WITH THE AUTHORS OR COPYRIGHT HOLDERS
// OF THIS SOFTWARE.


#import "NSDictionary+CaseInsensitiveKeys.h"

@implementation NSDictionary (CaseInsensitiveKeys)

-(id) valueForCaseInsensitiveKey:(NSString *)key
{
    __block id object = nil;
    [self enumerateKeysAndObjectsUsingBlock:^(id akey, id obj, BOOL *stop){
        if ([akey isKindOfClass:[NSString class]]) 
        {
            if ([(NSString*)akey caseInsensitiveCompare:key] == NSOrderedSame) 
            {
                object = obj; 
                *stop = YES;
            }            
        }
    }];
    return object;
}

@end

@implementation NSMutableDictionary (CaseInsensitiveKeys)

-(void) removeObjectForKeyCaseInsensitiveKey:(NSString *)key
{
    __block NSString *realKey = nil;
    [self enumerateKeysAndObjectsUsingBlock:^(id akey, id obj, BOOL *stop){
        if ([akey isKindOfClass:[NSString class]]) 
        {
            if ([(NSString*)akey caseInsensitiveCompare:key] == NSOrderedSame) 
            {
                realKey = akey;
                *stop = YES;
            }            
        }
    }];
    
    if (realKey != nil)
        [self removeObjectForKey:realKey];
}

@end